{"version":3,"sources":["components/mainpage/pokeCard.js","components/mainpage/pokeAttributes.js","components/mainpage/indexStyles.js","components/mainpage/pokemonIndex.js","components/detailview/pokeDetail.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","CardItem","CardImage","img","PokeCard","pokeObj","num","name","weaknesses","type","to","pathname","state","style","textDecoration","color","src","alt","types","Grass","Poison","Fire","Water","Bug","Normal","Electric","Ground","Fighting","Psychic","Rock","Ice","Ghost","Dragon","Flying","Fairy","Dark","Steel","CheckboxContainer","props","selected","SelectorsContainer","gridArea","SearchContainer","PokemonContainer","label","input","IndexView","useState","pokeList","setPokeList","renderList","setRenderList","searchString","setSearchString","types1","setTypes","weakness","setWeakness","fetchPokemon","a","Axios","get","pokemon","data","useEffect","regex","RegExp","trueTypes","Object","keys","filter","key","trueWeakness","filteredList","poke","resA","some","includes","resB","resC","test","resAll","length","pokemons","map","id","filterTypes","onClick","e","newValue","target","weaknessTypes","ele","newWeaknesses","textShadow","fontSize","WebkitTextStroke","margin","value","onChange","placeholder","DisplayItem","gridarea","Title","StyledLink","Link","StyledImg","ImageContainer","List","ul","DetailsContainer","StrengthsContainer","EvolutionContainer","DetailsItem","PokeDetail","location","height","weight","prev_evolution","next_evolution","previous","next","displayType","singleType","displayWeakness","singleWeakness","display","alignItems","justifyContent","App","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3cf0ccb9.chunk.js","sourcesContent":["\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport {Link} from \"react-router-dom\"\n\nconst Container = styled.div`\n    width: 250px;\n    padding-top: 5px;\n    border: 0.5px solid black;\n    background-color:white;\n    border-radius: 5px;\n    justify-items: center;\n    text-align: center;\n    margin: 10px 20px;\n    min-height: 250px;\n    max-height: 300px;\n    \n    &:hover{\n        background-color: lightblue;\n        cursor: pointer;\n    }\n\n`\n\nconst CardItem = styled.div`\n    font-size: 12pt;\n    word-wrap: break-word;\n`\nconst CardImage = styled.img`\n    max-height: 120px;\n`\n\nexport const PokeCard = ( {pokeObj, pokeObj:{num, name, weaknesses, type, img}}) => {\n    return (\n        <Link \n            to={{\n            pathname:\"/details\",\n            state:{\n                pokeObj\n            }\n        }}\n        style={{textDecoration: \"none\", color: \"black\"}}>\n\n        <Container>\n            <CardItem>{name}</CardItem>\n            <CardItem>{`# ${num}`}</CardItem>\n            <CardImage src={img} alt={name}/>\n            <CardItem>{`Type: ${type}`}</CardItem>\n            <CardItem>{`Weaknesses: ${weaknesses}`}</CardItem>\n\n        </Container>\n        </Link>\n\n\n    )\n}\n\n","export const types = {\n  Grass: false,\n  Poison: false,\n  Fire: false,\n  Water: false,\n  Bug: false,\n  Normal: false,\n  Electric: false,\n  Ground: false,\n  Fighting: false,\n  Psychic: false,\n  Rock: false,\n  Ice: false,\n  Ghost: false,\n  Dragon: false,\n};\n\nexport const weaknesses = {\n  Fire: false,\n  Ice: false,\n  Flying: false,\n  Psychic: false,\n  Water: false,\n  Ground: false,\n  Rock: false,\n  Electric: false,\n  Grass: false,\n  Fighting: false,\n  Poison: false,\n  Bug: false,\n  Fairy: false,\n  Ghost: false,\n  Dark: false,\n  Steel: false,\n  Dragon: false,\n};\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    width: 80vw;\n    /* background-color: white; */\n    margin: auto;\n    display: grid;\n    grid-template-areas: \n    \"types\"\n    \"weaknesses\"\n    \"search\"\n    \"pokemon\";\n    \n    `\n\nexport const CheckboxContainer = styled.div`\n   width: 5vw;\n   min-width:60px;\n   height: 5vh;\n   min-height: 45px;\n   /* border: 0.5px solid black; */\n   border: ${(props)=> props.selected ? \"1px solid #55C2F1\": \"none\"};\n    /* background-color:white; */\n    background-color:${(props)=> props.selected ? \"lightblue\" : \"white\"};\n    border-radius: 5px;\n    display: flex;\n    flex-direction: row;\n    flex-direction: column;\n    margin: 2px;\n    text-align: center;\n    line-height: 5vh;\n    cursor: pointer;\n    \n    &:hover{\n        background-color: lightblue;\n        \n    }\n    \n    `\n\nexport const SelectorsContainer = styled.div`\n    justify-content: center;\n    align-content: center;\n    align-items:center;\n    flex-wrap: wrap;\n    width: 100%;\n    /* height: 10vh; */\n    display: flex;\n    grid-area: ${(props)=> props.gridArea};\n\n`\n\nexport const SearchContainer = styled(SelectorsContainer)`\n    height: 10vh;\n`\n\nexport const StyledLabel = styled.label`\n    text-align: center;\n`\n\nexport const StyledInput = styled.input`\n    margin: auto;\n    cursor: pointer;\n`\n\nexport const PokemonContainer = styled.div`\ndisplay: flex; \nflex-wrap: wrap; \nmargin: auto;\njustify-content: space-evenly; \noverflow-Y: scroll ;\nheight: 60vh;\n -ms-overflow-style: none;  /* Internet Explorer 10+ */\n    scrollbar-width: none;\n   &::-webkit-scrollbar{\n    display: none;\n   } \n\n`","import Axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { PokeCard } from \"./pokeCard\";\nimport { types as types1, weaknesses } from \"./pokeAttributes\";\nimport {Container,CheckboxContainer, SelectorsContainer, SearchContainer, PokemonContainer} from './indexStyles'\n\nexport const IndexView = () => {\n  const [pokeList, setPokeList] = useState([]);\n  const [renderList, setRenderList] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [types, setTypes] = useState(types1);\n  const [weakness, setWeakness] = useState(weaknesses);\n\n  const fetchPokemon = async () => {\n    let{ data:{pokemon} }= await Axios.get(\n      `https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json`\n    );\n\n    setPokeList(pokemon);\n    setRenderList(pokemon);\n  };\n\n  useEffect(() => {\n    fetchPokemon();\n  }, []);\n\n  useEffect(() => {\n    let regex = new RegExp(searchString, \"gi\");\n\n    const trueTypes = Object.keys(types).filter((key) => types[key]);\n    const trueWeakness = Object.keys(weakness).filter((key) => weakness[key]);\n\n    let filteredList = pokeList.filter((poke) => {\n      // Additional filters added by adding another res and a logic test\n      let resA = poke.type.some((type) => {\n        return trueTypes.includes(type);\n      });\n      let resB = poke.weaknesses.some((weakness) => {\n        return trueWeakness.includes(weakness);\n      });\n      let resC = regex.test(poke.name);\n      \n      let resAll = true \n      if(trueTypes.length) resAll = resAll && resA\n      if (trueWeakness.length) resAll = resAll && resB\n      if (searchString.length) resAll = resAll && resC\n      return resAll\n      // if (!trueWeakness.length && !trueTypes.length && !searchString)\n      //   return true;\n      // //no entries\n      // else if (!trueWeakness.length && !searchString) return resA;\n      // // only type\n      // else if (!trueTypes.length && !searchString) return resB;\n      // // only weakness\n      // else if (!trueTypes.length && !trueWeakness.length) return resC;\n      // // only searchstring\n      // else if (!searchString) return resA && resB;\n      // // type and weakness\n      // else if (!trueWeakness.length) return resA && resC;\n      // //type and searchstring\n      // else if (!trueTypes.length) return resB && resC;\n      // //weakness and searchstring\n      // else return resA && resB && resC; //all 3\n\n      //6 cases\n    });\n    setRenderList(filteredList);\n  }, [types, weakness, searchString, pokeList]);\n\n  let pokemons = renderList.map((pokeObj) => (\n    <PokeCard key={pokeObj.id} pokeObj={pokeObj} />\n  ));\n\n  const renderTypes = () => {\n    let typeList = Object.keys(types).map((type) => {\n      return (\n        <CheckboxContainer selected={types[type]}\n          id={type}\n          name=\"type\"\n          key={type}\n          onClick={(e) => {\n              const newValue = !types[e.target.id];\n              setTypes({ ...types, [e.target.id]: newValue })\n          }}\n        >\n            {type}\n        </CheckboxContainer>\n            \n      );\n    });\n    return typeList;\n  };\n\n  const renderWeaknesses = () => {\n    let weaknessList = Object.keys(weakness).map((ele) => {\n      return (\n        <CheckboxContainer\n          selected={weakness[ele]}\n                key={ele}\n                id={ele}\n                name=\"weakness\"\n                onClick={(e) => {\n                const newWeaknesses = !weakness[e.target.id];\n                setWeakness({ ...weakness, [e.target.id]: newWeaknesses });\n                }}\n        >{ele}\n        </CheckboxContainer>\n      );\n    });\n    return weaknessList;\n  };\n\n \n  if (pokeList) {\n    let filterTypes = renderTypes();\n    let weaknessTypes = renderWeaknesses();\n    \n    return (\n    <Container>\n      \n      <SelectorsContainer gridArea={\"types\"}>\n        <h2 style={{color: \"white\"}}>Types</h2>\n        {filterTypes}\n      </SelectorsContainer>\n\n      <SelectorsContainer gridArea={\"weaknesses\"}>\n        <h2 style={{color: \"white\"}}>Weaknesses</h2>\n        {weaknessTypes} \n      </SelectorsContainer>\n\n      <SearchContainer>\n           <div style={{color: \"white\", \n           textShadow:\"2px 2px black\", \n           fontSize: \"12pt\",\n           WebkitTextStroke:\"1px white\"}}>\n             Search For Pokemon\n             </div> \n\n           <div>\n            <input\n                style={{margin: \"0px 5px\"}}\n                type=\"text\"\n                value={searchString}\n                onChange={(e) => setSearchString(e.target.value)}\n                placeholder=\"Start Typing to Search...\"\n                />\n            </div>\n          <div style={{color: \"white\"}}>{`Displaying ${renderList.length} of ${pokeList.length}`}</div>\n        </SearchContainer>\n        <PokemonContainer >\n\n          {pokemons}\n        </PokemonContainer>\n      </Container>\n    );\n  } else {\n    return \"\";\n  }\n};\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    height: 80vh;\n    width: 80vw;\n    margin: 40px auto;\n    display: grid;\n    grid-template-areas: \n    \"link title .\"\n    \"img details .\"\n    \"prev strwk next\";\n    grid-template-columns: 1fr 4fr 1fr;\n    grid-template-rows: 50px 300px 250px;\n  \n`\n\nconst DisplayItem = styled.div`\n    grid-area: ${(props)=> props.gridarea};\n    align-items: center;\n    border-radius: 5px;\n    margin-bottom: 5px;\n\n`\n\nconst Title = styled(DisplayItem)`\n    font-size: 22pt;\n    /* color: white; */\n    text-align: center;\n    line-height: 50px;\n    background-color: white;\n`\n\nconst StyledLink = styled(Link)`\n    grid-area: ${(props)=> props.gridarea};\n    color: white;\n    font-size: 1.5em;\n`\n\nconst StyledImg = styled.img`\n    height: 200px;\n    width: 200px;\n    grid-area: ${(props)=> props.gridarea};\n\n`\nconst ImageContainer = styled.div`\n    height: 210px;\n    width: 200px;\n    line-height: 200px;\n    text-align: center;\n    align-items: center;\n    grid-area: ${(props)=> props.gridarea};\n    background-color: lightblue;\n    border-radius: 5px;\n    margin-right: 20px;\n`\nconst List = styled.ul`\n    text-align: center;\n    font-size: 20pt;\n    list-style: none;\n    box-sizing: border-box;\n    \n    \n    & > li {\n        font-size: 18pt;\n        text-align: center;\n    }\n\n`\nconst DetailsContainer = styled(DisplayItem)`\n    background-color: white;\n    text-align: center  ;\n\n`\n\nconst StrengthsContainer = styled(DisplayItem)`\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n    background-color: white;\n    margin: 10px;\n    \n\n`\nconst EvolutionContainer = styled(StrengthsContainer)`\n    line-height: 250px;\n    font-size: 12pt;\n`\n\nconst DetailsItem = styled.div`\n    font-size: 18pt;\n\n\n`\n\nexport const PokeDetail = ({location:{state:{pokeObj}}}) => {\n    const {name, num, img, type,  weaknesses, height, weight, prev_evolution, next_evolution} = pokeObj\n\n    let previous = prev_evolution ? prev_evolution.map(({name})=>(\n    <EvolutionContainer key={name} gridarea=\"prev\">{`Previous: ${name}`}</EvolutionContainer>\n    )) : \"\"\n\n    let next = next_evolution ? next_evolution.map(({name})=>(\n    <EvolutionContainer key={name} gridarea=\"next\">{`Next: ${name}`}</EvolutionContainer>\n    )) : \"\"\n\n    let displayType = type.map(singleType=> (\n        <li key={singleType}>{singleType}</li>\n    ))\n\n    let displayWeakness = weaknesses.map(singleWeakness=> (\n        <li key={singleWeakness}>{singleWeakness}</li>\n    ))\n   \n\n    return(\n        <Container>\n            <div gridarea={\"link\"}>\n\n                <StyledLink to=\"/pokedex\" >Back to List</StyledLink>\n            </div>\n            <Title gridarea={\"title\"} >{name}</Title>\n            <DetailsContainer gridarea=\"details\">\n                <h2>Details</h2>\n                <div style={{display: \"flex\", height: \"200px\", alignItems:\"center\", justifyContent:\"center\"}}>\n\n            <ImageContainer >\n                <StyledImg src={img} alt={name} />\n            </ImageContainer>\n                <div>\n\n                <DetailsItem>{`Number: ${num}`}</DetailsItem>\n                <DetailsItem>{`Height: ${height}`}</DetailsItem>\n                <DetailsItem>{`Weight: ${weight}`}</DetailsItem>\n                </div>\n                </div>\n            </DetailsContainer>\n            <StrengthsContainer gridarea=\"strwk\">\n                <List > Poke Type\n                    {displayType}\n                </List>\n\n                \n                <List > Weak Against\n                    {displayWeakness}\n                </List>\n\n            </StrengthsContainer>\n            {previous}\n            {next}\n\n        </Container>\n\n    )\n}","import React from 'react';\nimport './App.css';\nimport {IndexView} from './components/mainpage/pokemonIndex'\nimport {PokeDetail} from './components/detailview/pokeDetail'\nimport {Switch, Route, BrowserRouter as Router} from \"react-router-dom\"\n\n\nfunction App() {\n  return (\n    <Router>\n\n    <Switch>\n      <Route path=\"/details\" component={PokeDetail}/>\n       \n      <Route path=\"/\" component={IndexView}/>\n\n     \n    </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import {StoreProvider} from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <StoreProvider> */}\n      <App />\n    {/* </StoreProvider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}